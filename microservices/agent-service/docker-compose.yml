version: '3.8'

services:
  # Agent Service
  agent-service:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: bmad-agent-service
    ports:
      - "8001:8001"
    environment:
      - AGENT_SERVICE_HOST=0.0.0.0
      - AGENT_SERVICE_PORT=8001
      - AGENT_SERVICE_DEBUG=true
      - DATABASE_URL=postgresql://bmad:bmad123@postgres:5432/agent_service
      - REDIS_URL=redis://redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - LOG_LEVEL=INFO
    volumes:
      - ./src:/app/src
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - consul
    networks:
      - bmad-network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bmad-postgres
    environment:
      - POSTGRES_DB=agent_service
      - POSTGRES_USER=bmad
      - POSTGRES_PASSWORD=bmad123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - bmad-network
    restart: unless-stopped

  # Redis for caching and message queue
  redis:
    image: redis:7-alpine
    container_name: bmad-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bmad-network
    restart: unless-stopped

  # Consul for service discovery
  consul:
    image: consul:1.16
    container_name: bmad-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: agent -server -bootstrap-expect=1 -ui -client=0.0.0.0
    volumes:
      - consul_data:/consul/data
    networks:
      - bmad-network
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: bmad-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - bmad-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: bmad-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - bmad-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  consul_data:
  prometheus_data:
  grafana_data:

networks:
  bmad-network:
    driver: bridge 