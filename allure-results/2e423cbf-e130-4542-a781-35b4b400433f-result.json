{"name": "test_slack_hitl", "status": "broken", "statusDetails": {"message": "Exception: [Slack] Notificatie mislukt: 200 {\"ok\":false,\"error\":\"invalid_auth\"}", "trace": "@pytest.mark.skipif(os.getenv(\"CI\") == \"true\" or not os.getenv(\"SLACK_BOT_TOKEN\"), reason=\"Handmatige test, niet geschikt voor CI of zonder Slack token\")\n    def test_slack_hitl():\n        channel = os.getenv(\"SLACK_DEFAULT_CHANNEL\", \"C097FTDU1A5\")\n>       send_human_in_loop_alert(\n            reason=\"Test HITL alert via script.\",\n            channel=channel,\n            user_mention=None,\n            alert_id=\"test-hitl-001\",\n            use_api=True\n        )\n\ntests/fixtures/mocks/slack_hitl_test.py:8: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nintegrations/slack/slack_notify.py:96: in send_human_in_loop_alert\n    send_slack_message(text, channel=channel, use_api=use_api, blocks=blocks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntext = ':rotating_light: *Human-in-the-loop vereist!* Test HITL alert via script.', channel = 'C097FTDU1A5'\nfeedback_id = None, use_api = True\nblocks = [{'text': {'text': ':rotating_light: *Human-in-the-loop vereist!* Test HITL alert via script.', 'type': 'mrkdwn'}, 'ty..., 'style': 'danger', 'text': {'text': '❌ Afwijzen', 'type': 'plain_text'}, 'type': 'button', ...}], 'type': 'actions'}]\n\n    def send_slack_message(text, channel=None, feedback_id=None, use_api=False, blocks=None):\n        \"\"\"\n        Stuur een bericht naar Slack via webhook of chat.postMessage API.\n        :param text: Berichttekst (str)\n        :param channel: Slack-kanaal of user-id (str)\n        :param feedback_id: Optioneel, unieke id voor feedback tracking\n        :param use_api: Gebruik Slack API (chat.postMessage) i.p.v. webhook\n        :param blocks: Optioneel, Slack Block Kit blocks (list)\n        \"\"\"\n        if use_api:\n            if not SLACK_BOT_TOKEN:\n                raise ValueError(\"SLACK_BOT_TOKEN is niet ingesteld!\")\n            url = \"https://slack.com/api/chat.postMessage\"\n            headers = {\n                \"Authorization\": f\"Bearer {SLACK_BOT_TOKEN}\",\n                \"Content-Type\": \"application/json; charset=utf-8\"\n            }\n            payload = {\"text\": text}\n            if channel:\n                payload[\"channel\"] = channel\n            if blocks:\n                payload[\"blocks\"] = blocks\n            elif feedback_id:\n                payload[\"blocks\"] = _feedback_blocks(text, feedback_id)\n            # Debug prints\n            print(\"DEBUG SLACK_BOT_TOKEN:\", os.getenv(\"SLACK_BOT_TOKEN\"))\n            print(\"DEBUG channel:\", channel)\n            print(\"DEBUG type(channel):\", type(channel))\n            print(\"DEBUG repr(channel):\", repr(channel))\n            response = requests.post(url, headers=headers, json=payload)\n            print(\"[Slack API] Response:\", response.status_code, response.text)\n            if not response.ok or not response.json().get(\"ok\"):\n>               raise Exception(f\"[Slack] Notificatie mislukt: {response.status_code} {response.text}\")\nE               Exception: [Slack] Notificatie mislukt: 200 {\"ok\":false,\"error\":\"invalid_auth\"}\n\nintegrations/slack/slack_notify.py:48: Exception"}, "attachments": [{"name": "stdout", "source": "d5e767f6-baa4-470b-b3ef-c5d157d8b42c-attachment.txt", "type": "text/plain"}], "start": 1753819410521, "stop": 1753819410707, "uuid": "ea264053-a15b-4323-bad5-c103fdf0a610", "historyId": "8ea5f23246adf02f243abe33f4404137", "testCaseId": "8ea5f23246adf02f243abe33f4404137", "fullName": "tests.fixtures.mocks.slack_hitl_test#test_slack_hitl", "labels": [{"name": "parentSuite", "value": "tests.fixtures.mocks"}, {"name": "suite", "value": "slack_hitl_test"}, {"name": "host", "value": "Yannick-Mac-Gillavry-werk.local"}, {"name": "thread", "value": "90219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.fixtures.mocks.slack_hitl_test"}], "titlePath": ["tests", "fixtures", "mocks", "slack_hitl_test.py"]}