{"name": "test_agent_help[agent2]", "status": "failed", "statusDetails": {"message": "AssertionError: assert \"Beschikbare commando's\" in '\\nTestEngineer Agent Commands:\\n  help                    - Show this help message\\n  run-tests               - Run a...     - Test resource completeness\\n  collaborate             - Demonstrate collaboration with other agents\\n        \\n'\n +  where '\\nTestEngineer Agent Commands:\\n  help                    - Show this help message\\n  run-tests               - Run a...     - Test resource completeness\\n  collaborate             - Demonstrate collaboration with other agents\\n        \\n' = CompletedProcess(args=['/Users/yannickmacgillavry/Projects/BMAD/path/to/venv/bin/python3.13', '-m', 'bmad.agents.Agent...Policy created: retro_approval\\n[INFO] Created 18 agent-specific policies\\n[INFO] Default advanced policies created\\n').stdout", "trace": "agent = {'help_kw': \"Beschikbare commando's\", 'module': 'bmad.agents.Agent.TestEngineer.testengineer', 'name': 'TestEngineer', 'workflow_cmd': 'run-tests', ...}\n\n    @pytest.mark.parametrize(\"agent\", AGENTS)\n    def test_agent_help(agent):\n        result = subprocess.run(\n            [sys.executable, \"-m\", agent[\"module\"]],\n            capture_output=True, text=True\n        )\n>       assert agent[\"help_kw\"] in result.stdout\nE       assert \"Beschikbare commando's\" in '\\nTestEngineer Agent Commands:\\n  help                    - Show this help message\\n  run-tests               - Run a...     - Test resource completeness\\n  collaborate             - Demonstrate collaboration with other agents\\n        \\n'\nE        +  where '\\nTestEngineer Agent Commands:\\n  help                    - Show this help message\\n  run-tests               - Run a...     - Test resource completeness\\n  collaborate             - Demonstrate collaboration with other agents\\n        \\n' = CompletedProcess(args=['/Users/yannickmacgillavry/Projects/BMAD/path/to/venv/bin/python3.13', '-m', 'bmad.agents.Agent...Policy created: retro_approval\\n[INFO] Created 18 agent-specific policies\\n[INFO] Default advanced policies created\\n').stdout\n\ntests/integration/agents/test_bmad_agents_cli.py:35: AssertionError"}, "parameters": [{"name": "agent", "value": "{'name': 'TestEngineer', 'module': 'bmad.agents.Agent.TestEngineer.testengineer', 'help_kw': \"Beschikbare commando's\", 'workflow_cmd': 'run-tests', 'workflow_expect': \"Commando 'run-tests'\"}"}], "start": 1753819412870, "stop": 1753819413479, "uuid": "d11c7690-645e-4094-82ed-bd521842e7a3", "historyId": "ee2ab56ffc8d6eed22bd39df78078c9f", "testCaseId": "429db463dceabe7d33bf23eee801a273", "fullName": "tests.integration.agents.test_bmad_agents_cli#test_agent_help", "labels": [{"name": "parentSuite", "value": "tests.integration.agents"}, {"name": "suite", "value": "test_bmad_agents_cli"}, {"name": "host", "value": "Yannick-Mac-Gillavry-werk.local"}, {"name": "thread", "value": "90219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.integration.agents.test_bmad_agents_cli"}], "titlePath": ["tests", "integration", "agents", "test_bmad_agents_cli.py"]}