{"name": "test_workflow_execution", "status": "failed", "statusDetails": {"message": "AssertionError: assert <WorkflowStatus.RUNNING: 'running'> in ['running', 'completed']", "trace": "@pytest.mark.asyncio\n    async def test_workflow_execution():\n        \"\"\"Test workflow execution.\"\"\"\n        orchestrator = IntegratedWorkflowOrchestrator()\n    \n        # Maak een eenvoudige workflow\n        tasks = [\n            WorkflowTask(\n                id=\"po_1\",\n                name=\"Create User Stories\",\n                agent=\"ProductOwner\",\n                command=\"create-story\"\n            ),\n            WorkflowTask(\n                id=\"arch_1\",\n                name=\"Design Architecture\",\n                agent=\"Architect\",\n                command=\"design-system\",\n                dependencies=[\"po_1\"]\n            )\n        ]\n    \n        workflow_def = WorkflowDefinition(\n            name=\"simple_workflow\",\n            description=\"Simple test workflow\",\n            tasks=tasks\n        )\n    \n        # Registreer workflow\n        orchestrator.register_workflow(workflow_def)\n    \n        # Start workflow\n        workflow_id = orchestrator.start_workflow(\"simple_workflow\", {\"project\": \"test\"})\n    \n        # Wacht even voor execution\n        await asyncio.sleep(1)\n    \n        # Check workflow status\n        status = orchestrator.get_workflow_status(workflow_id)\n        assert status is not None\n        assert status[\"name\"] == \"simple_workflow\"\n>       assert status[\"status\"] in [\"running\", \"completed\"]\nE       AssertionError: assert <WorkflowStatus.RUNNING: 'running'> in ['running', 'completed']\n\ntests/integration/workflows/test_advanced_workflow.py:179: AssertionError"}, "description": "Test workflow execution.", "attachments": [{"name": "log", "source": "a257738d-0639-44b4-a005-fbf7c7d95f07-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "06fc3bd0-6cd8-4a3d-8c67-462e84a7d3d5-attachment.txt", "type": "text/plain"}], "start": 1753819420750, "stop": 1753819421763, "uuid": "c77fe3f3-9d78-4258-9664-57347d1d98ea", "historyId": "071f36a7894bf978465bc9f4819dfa01", "testCaseId": "071f36a7894bf978465bc9f4819dfa01", "fullName": "tests.integration.workflows.test_advanced_workflow#test_workflow_execution", "labels": [{"name": "tag", "value": "asyncio"}, {"name": "parentSuite", "value": "tests.integration.workflows"}, {"name": "suite", "value": "test_advanced_workflow"}, {"name": "host", "value": "Yannick-Mac-Gillavry-werk.local"}, {"name": "thread", "value": "90219-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.integration.workflows.test_advanced_workflow"}], "titlePath": ["tests", "integration", "workflows", "test_advanced_workflow.py"]}