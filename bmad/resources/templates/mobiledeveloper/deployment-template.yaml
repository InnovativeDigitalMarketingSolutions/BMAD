# Mobile App Deployment Configuration

## iOS Deployment

### App Store Deployment
ios_app_store:
  bundle_identifier: "com.bmad.mobileapp"
  version: "1.0.0"
  build_number: "1"
  
  signing:
    team_id: "YOUR_TEAM_ID"
    provisioning_profile: "AppStore_Provisioning_Profile"
    certificate: "Apple_Distribution_Certificate"
  
  capabilities:
    - push_notifications
    - background_modes
    - app_groups
  
  app_store_connect:
    api_key_id: "YOUR_API_KEY_ID"
    api_key_issuer_id: "YOUR_ISSUER_ID"
    api_key_path: "path/to/AuthKey_XXXXXXXXXX.p8"

### TestFlight Deployment
ios_testflight:
  bundle_identifier: "com.bmad.mobileapp.beta"
  version: "1.0.0-beta"
  build_number: "1"
  
  beta_testing:
    internal_testers: 25
    external_testers: 100
    feedback_enabled: true
  
  distribution:
    method: "app-store-connect"
    upload_to_testflight: true

## Android Deployment

### Google Play Store
android_play_store:
  application_id: "com.bmad.mobileapp"
  version_name: "1.0.0"
  version_code: 1
  
  signing:
    keystore_path: "path/to/release.keystore"
    keystore_password: "YOUR_KEYSTORE_PASSWORD"
    key_alias: "release"
    key_password: "YOUR_KEY_PASSWORD"
  
  play_console:
    service_account_json: "path/to/service-account.json"
    track: "production"
    release_notes:
      en-US: "Initial release with core features"
  
  bundle:
    enabled: true
    splits:
      abi: true
      density: true
      language: true

### Internal Distribution
android_internal:
  application_id: "com.bmad.mobileapp.internal"
  version_name: "1.0.0-internal"
  version_code: 1
  
  distribution:
    method: "internal"
    track: "internal"
    release_notes: "Internal testing build"

## React Native Deployment

### iOS Build Configuration
react_native_ios:
  build_configuration: "Release"
  scheme: "MobileApp"
  workspace: "ios/MobileApp.xcworkspace"
  
  build_settings:
    ENABLE_BITCODE: "NO"
    OTHER_LDFLAGS: "-ObjC"
    SWIFT_VERSION: "5.0"
  
  dependencies:
    - react-native-vector-icons
    - react-native-splash-screen
    - react-native-config

### Android Build Configuration
react_native_android:
  build_type: "release"
  gradle_task: "assembleRelease"
  
  build_settings:
    enableHermes: true
    enableProguardInReleaseBuilds: true
    enableSeparateBuildPerCPUArchitecture: true
  
  dependencies:
    - react-native-vector-icons
    - react-native-splash-screen
    - react-native-config

## Flutter Deployment

### iOS Build Configuration
flutter_ios:
  build_mode: "release"
  target_platform: "ios"
  
  build_settings:
    enable_bitcode: false
    swift_version: "5.0"
    deployment_target: "13.0"
  
  dependencies:
    - flutter_launcher_icons
    - flutter_native_splash
    - shared_preferences

### Android Build Configuration
flutter_android:
  build_mode: "release"
  target_platform: "android"
  
  build_settings:
    enable_proguard: true
    enable_shrinking: true
    enable_split_debug_info: true
  
  dependencies:
    - flutter_launcher_icons
    - flutter_native_splash
    - shared_preferences

## CI/CD Configuration

### GitHub Actions
github_actions:
  triggers:
    - push:
        branches: [main, develop]
    - pull_request:
        branches: [main]
  
  jobs:
    test:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v3
        - name: Setup Node.js
          uses: actions/setup-node@v3
          with:
            node-version: '18'
        - name: Install dependencies
          run: npm install
        - name: Run tests
          run: npm test
    
    build_ios:
      runs-on: macos-latest
      needs: test
      steps:
        - uses: actions/checkout@v3
        - name: Setup Xcode
          uses: maxim-lobanov/setup-xcode@v1
        - name: Build iOS
          run: |
            cd ios
            xcodebuild -workspace MobileApp.xcworkspace -scheme MobileApp -configuration Release -destination generic/platform=iOS build
    
    build_android:
      runs-on: ubuntu-latest
      needs: test
      steps:
        - uses: actions/checkout@v3
        - name: Setup Java
          uses: actions/setup-java@v3
          with:
            java-version: '11'
        - name: Build Android
          run: |
            cd android
            ./gradlew assembleRelease

### Fastlane Configuration
fastlane:
  ios:
    lane: "beta"
    actions:
      - increment_build_number
      - build_ios_app
      - upload_to_testflight
      - slack_notify
    
  android:
    lane: "beta"
    actions:
      - increment_version_code
      - build_android_app
      - upload_to_play_store
      - slack_notify

## Environment Configuration

### Development
development:
  api_url: "https://dev-api.bmad.com"
  environment: "development"
  debug_enabled: true
  crash_reporting: false

### Staging
staging:
  api_url: "https://staging-api.bmad.com"
  environment: "staging"
  debug_enabled: true
  crash_reporting: true

### Production
production:
  api_url: "https://api.bmad.com"
  environment: "production"
  debug_enabled: false
  crash_reporting: true 