{"version":3,"file":"BMADDashboard-dd8717f7.js","sources":["../../node_modules/lucide-react/dist/esm/icons/alert-circle.js","../../node_modules/lucide-react/dist/esm/icons/moon.js","../../node_modules/lucide-react/dist/esm/icons/sun.js","../../node_modules/lucide-react/dist/esm/icons/wifi-off.js","../../src/hooks/useWebSocket.ts","../../src/components/ui/ThemeToggle.tsx","../../src/components/ui/ConnectionStatus.tsx","../../src/components/v1/BMADDashboard.tsx"],"sourcesContent":["/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst AlertCircle = createLucideIcon(\"AlertCircle\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"10\", key: \"1mglay\" }],\n  [\"line\", { x1: \"12\", x2: \"12\", y1: \"8\", y2: \"12\", key: \"1pkeuh\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"16\", y2: \"16\", key: \"4dfq90\" }]\n]);\n\nexport { AlertCircle as default };\n//# sourceMappingURL=alert-circle.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Moon = createLucideIcon(\"Moon\", [\n  [\"path\", { d: \"M12 3a6 6 0 0 0 9 9 9 9 0 1 1-9-9Z\", key: \"a7tn18\" }]\n]);\n\nexport { Moon as default };\n//# sourceMappingURL=moon.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst Sun = createLucideIcon(\"Sun\", [\n  [\"circle\", { cx: \"12\", cy: \"12\", r: \"4\", key: \"4exip2\" }],\n  [\"path\", { d: \"M12 2v2\", key: \"tus03m\" }],\n  [\"path\", { d: \"M12 20v2\", key: \"1lh1kg\" }],\n  [\"path\", { d: \"m4.93 4.93 1.41 1.41\", key: \"149t6j\" }],\n  [\"path\", { d: \"m17.66 17.66 1.41 1.41\", key: \"ptbguv\" }],\n  [\"path\", { d: \"M2 12h2\", key: \"1t8f8n\" }],\n  [\"path\", { d: \"M20 12h2\", key: \"1q8mjw\" }],\n  [\"path\", { d: \"m6.34 17.66-1.41 1.41\", key: \"1m8zz5\" }],\n  [\"path\", { d: \"m19.07 4.93-1.41 1.41\", key: \"1shlcs\" }]\n]);\n\nexport { Sun as default };\n//# sourceMappingURL=sun.js.map\n","/**\n * @license lucide-react v0.294.0 - ISC\n *\n * This source code is licensed under the ISC license.\n * See the LICENSE file in the root directory of this source tree.\n */\n\nimport createLucideIcon from '../createLucideIcon.js';\n\nconst WifiOff = createLucideIcon(\"WifiOff\", [\n  [\"line\", { x1: \"2\", x2: \"22\", y1: \"2\", y2: \"22\", key: \"a6p6uj\" }],\n  [\"path\", { d: \"M8.5 16.5a5 5 0 0 1 7 0\", key: \"sej527\" }],\n  [\"path\", { d: \"M2 8.82a15 15 0 0 1 4.17-2.65\", key: \"11utq1\" }],\n  [\"path\", { d: \"M10.66 5c4.01-.36 8.14.9 11.34 3.76\", key: \"hxefdu\" }],\n  [\"path\", { d: \"M16.85 11.25a10 10 0 0 1 2.22 1.68\", key: \"q734kn\" }],\n  [\"path\", { d: \"M5 13a10 10 0 0 1 5.24-2.76\", key: \"piq4yl\" }],\n  [\"line\", { x1: \"12\", x2: \"12.01\", y1: \"20\", y2: \"20\", key: \"of4bc4\" }]\n]);\n\nexport { WifiOff as default };\n//# sourceMappingURL=wifi-off.js.map\n","// WebSocket Hook voor Real-time Updates\r\nimport { useState, useEffect, useRef, useCallback } from 'react'\r\n\r\ninterface WebSocketMessage {\r\n  type: 'agents' | 'metrics' | 'logs' | 'alerts'\r\n  data: any\r\n  timestamp: number\r\n}\r\n\r\ninterface UseWebSocketOptions {\r\n  url?: string\r\n  autoReconnect?: boolean\r\n  reconnectInterval?: number\r\n  maxReconnectAttempts?: number\r\n  fallbackToPolling?: boolean\r\n  pollingInterval?: number\r\n}\r\n\r\ninterface UseWebSocketReturn {\r\n  isConnected: boolean\r\n  isConnecting: boolean\r\n  lastMessage: WebSocketMessage | null\r\n  sendMessage: (message: any) => void\r\n  reconnect: () => void\r\n  error: string | null\r\n  connectionStatus: 'connected' | 'connecting' | 'disconnected' | 'error'\r\n}\r\n\r\nexport const useWebSocket = (options: UseWebSocketOptions = {}): UseWebSocketReturn => {\r\n  const {\r\n    url = 'ws://localhost:5001/ws', // Changed to port 5001\r\n    autoReconnect = true,\r\n    reconnectInterval = 3000,\r\n    maxReconnectAttempts = 5,\r\n    fallbackToPolling = true,\r\n    pollingInterval = 3000 // Verlaagd naar 3 seconden voor snellere updates\r\n  } = options\r\n\r\n  const [isConnected, setIsConnected] = useState(false)\r\n  const [isConnecting, setIsConnecting] = useState(false)\r\n  const [lastMessage, setLastMessage] = useState<WebSocketMessage | null>(null)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [connectionStatus, setConnectionStatus] = useState<'connected' | 'connecting' | 'disconnected' | 'error'>('disconnected')\r\n  const [reconnectAttempts, setReconnectAttempts] = useState(0)\r\n  const [usePolling, setUsePolling] = useState(false)\r\n\r\n  const wsRef = useRef<WebSocket | null>(null)\r\n  const reconnectTimeoutRef = useRef<ReturnType<typeof setTimeout> | null>(null)\r\n  const pollingIntervalRef = useRef<ReturnType<typeof setInterval> | null>(null)\r\n  const isMountedRef = useRef(true)\r\n\r\n  // Cleanup function\r\n  const cleanup = useCallback(() => {\r\n    if (wsRef.current) {\r\n      wsRef.current.close()\r\n      wsRef.current = null\r\n    }\r\n    if (reconnectTimeoutRef.current) {\r\n      clearTimeout(reconnectTimeoutRef.current)\r\n      reconnectTimeoutRef.current = null\r\n    }\r\n    if (pollingIntervalRef.current) {\r\n      clearInterval(pollingIntervalRef.current)\r\n      pollingIntervalRef.current = null\r\n    }\r\n  }, [])\r\n\r\n  // Polling fallback - Use correct API endpoint\r\n  const startPolling = useCallback(() => {\r\n    if (!fallbackToPolling || !isMountedRef.current) return\r\n\r\n    console.log('Starting polling fallback...')\r\n    setUsePolling(true)\r\n    setConnectionStatus('connecting')\r\n\r\n    const poll = async () => {\r\n      if (!isMountedRef.current) return\r\n      \r\n      try {\r\n        const controller = new AbortController()\r\n        const timeoutId = setTimeout(() => controller.abort(), 5000)\r\n        \r\n        console.log('Polling API endpoint: http://localhost:5001/api-proxy/agents')\r\n        const response = await fetch('http://localhost:5001/api-proxy/agents', {\r\n          signal: controller.signal,\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        })\r\n        \r\n        clearTimeout(timeoutId)\r\n        \r\n        if (response.ok && isMountedRef.current) {\r\n          const data = await response.json()\r\n          console.log('Polling successful, data received:', data)\r\n          \r\n          // Check if data has the expected structure\r\n          if (data && (data.agents || data.error)) {\r\n            setLastMessage({\r\n              type: 'agents',\r\n              data,\r\n              timestamp: Date.now()\r\n            })\r\n            setConnectionStatus('connected')\r\n            setError(null)\r\n          } else {\r\n            console.warn('Polling failed, invalid data structure:', data)\r\n            setConnectionStatus('disconnected')\r\n            setError('Invalid API response structure')\r\n          }\r\n        } else {\r\n          // If response is not ok, show as disconnected\r\n          console.warn('Polling failed, response not ok:', response.status)\r\n          setConnectionStatus('disconnected')\r\n          setError('API response not ok')\r\n        }\r\n      } catch (err) {\r\n        if (isMountedRef.current) {\r\n          console.warn('Polling fallback error:', err)\r\n          setError('Connection failed, using polling fallback')\r\n          setConnectionStatus('error') // Show as error instead of connected\r\n        }\r\n      }\r\n    }\r\n\r\n    // Initial poll\r\n    poll()\r\n\r\n    // Set up polling interval\r\n    pollingIntervalRef.current = setInterval(poll, pollingInterval)\r\n  }, [fallbackToPolling, pollingInterval])\r\n\r\n  const stopPolling = useCallback(() => {\r\n    if (pollingIntervalRef.current) {\r\n      clearInterval(pollingIntervalRef.current)\r\n      pollingIntervalRef.current = null\r\n    }\r\n    setUsePolling(false)\r\n  }, [])\r\n\r\n  // WebSocket connection\r\n  const connect = useCallback(() => {\r\n    if (!isMountedRef.current) return\r\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n      return\r\n    }\r\n\r\n    setIsConnecting(true)\r\n    setConnectionStatus('connecting')\r\n    setError(null)\r\n\r\n    try {\r\n      const ws = new WebSocket(url)\r\n      wsRef.current = ws\r\n\r\n      ws.onopen = () => {\r\n        if (!isMountedRef.current) return\r\n        \r\n        setIsConnected(true)\r\n        setIsConnecting(false)\r\n        setConnectionStatus('connected')\r\n        setReconnectAttempts(0)\r\n        setError(null)\r\n        stopPolling()\r\n      }\r\n\r\n      ws.onmessage = (event) => {\r\n        if (!isMountedRef.current) return\r\n        \r\n        try {\r\n          const message: WebSocketMessage = JSON.parse(event.data)\r\n          setLastMessage(message)\r\n        } catch (err) {\r\n          console.error('Failed to parse WebSocket message:', err)\r\n        }\r\n      }\r\n\r\n      ws.onclose = () => {\r\n        if (!isMountedRef.current) return\r\n        \r\n        setIsConnected(false)\r\n        setIsConnecting(false)\r\n        setConnectionStatus('disconnected')\r\n\r\n        if (autoReconnect && reconnectAttempts < maxReconnectAttempts && isMountedRef.current) {\r\n          setReconnectAttempts(prev => prev + 1)\r\n          \r\n          reconnectTimeoutRef.current = setTimeout(() => {\r\n            if (isMountedRef.current) {\r\n              connect()\r\n            }\r\n          }, reconnectInterval)\r\n        } else if (fallbackToPolling && !usePolling && isMountedRef.current) {\r\n          console.log('WebSocket failed, starting polling fallback')\r\n          startPolling()\r\n        }\r\n      }\r\n\r\n      ws.onerror = () => {\r\n        if (!isMountedRef.current) return\r\n        \r\n        console.warn('WebSocket error, falling back to polling')\r\n        setError('WebSocket error, using polling fallback')\r\n        setConnectionStatus('error') // Show as error first\r\n        setIsConnecting(false)\r\n        \r\n        // Automatically fall back to polling\r\n        if (fallbackToPolling && !usePolling) {\r\n          console.log('WebSocket error, starting polling fallback')\r\n          startPolling()\r\n        }\r\n      }\r\n\r\n    } catch (err) {\r\n      if (!isMountedRef.current) return\r\n      \r\n      console.warn('Failed to create WebSocket, using polling fallback:', err)\r\n      setError('WebSocket not available, using polling fallback')\r\n      setConnectionStatus('error') // Show as error first\r\n      setIsConnecting(false)\r\n      \r\n      // Automatically fall back to polling\r\n      if (fallbackToPolling && !usePolling) {\r\n        console.log('WebSocket creation failed, starting polling fallback')\r\n        startPolling()\r\n      }\r\n    }\r\n  }, [url, autoReconnect, reconnectInterval, maxReconnectAttempts, reconnectAttempts, fallbackToPolling, usePolling, startPolling, stopPolling])\r\n\r\n  const disconnect = useCallback(() => {\r\n    cleanup()\r\n    if (isMountedRef.current) {\r\n      setIsConnected(false)\r\n      setIsConnecting(false)\r\n      setConnectionStatus('disconnected')\r\n    }\r\n  }, [cleanup])\r\n\r\n  const sendMessage = useCallback((message: any) => {\r\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\r\n      wsRef.current.send(JSON.stringify(message))\r\n    } else {\r\n      console.warn('WebSocket is not connected, cannot send message')\r\n    }\r\n  }, [])\r\n\r\n  const reconnect = useCallback(() => {\r\n    disconnect()\r\n    setReconnectAttempts(0)\r\n    connect()\r\n  }, [disconnect, connect])\r\n\r\n  // Auto-connect on mount\r\n  useEffect(() => {\r\n    isMountedRef.current = true\r\n    connect()\r\n\r\n    return () => {\r\n      isMountedRef.current = false\r\n      disconnect()\r\n    }\r\n  }, [connect, disconnect])\r\n\r\n  return {\r\n    isConnected,\r\n    isConnecting,\r\n    lastMessage,\r\n    sendMessage,\r\n    reconnect,\r\n    error,\r\n    connectionStatus\r\n  }\r\n}\r\n\r\nexport default useWebSocket ","// Theme Toggle Component - Apple-inspired design (Shadcn/ui compatible)\r\nimport React from 'react'\r\nimport { Moon, Sun } from 'lucide-react'\r\nimport { useTheme } from '@/hooks/useTheme'\r\nimport { cn } from '@/lib/utils'\r\n\r\nexport const ThemeToggle: React.FC = () => {\r\n  const { isDark, toggle } = useTheme()\r\n\r\n  return (\r\n    <button\r\n      onClick={toggle}\r\n      className={cn(\r\n        \"relative inline-flex h-10 w-20 items-center rounded-full\",\r\n        \"bg-gradient-to-r from-slate-200 to-slate-300 dark:from-slate-700 dark:to-slate-600\",\r\n        \"hover:from-slate-300 hover:to-slate-400 dark:hover:from-slate-600 dark:hover:to-slate-500\",\r\n        \"transition-all duration-300 ease-in-out\",\r\n        \"focus:outline-none focus:ring-2 focus:ring-blue-500/50 focus:ring-offset-2\",\r\n        \"focus:ring-offset-background shadow-md\"\r\n      )}\r\n      aria-label=\"Toggle theme\"\r\n    >\r\n      <span\r\n        className={cn(\r\n          \"inline-block h-8 w-8 transform rounded-full\",\r\n          \"bg-gradient-to-br from-white to-slate-100 dark:from-slate-800 dark:to-slate-900\",\r\n          \"shadow-lg border border-slate-200 dark:border-slate-600\",\r\n          \"transition-all duration-300 ease-in-out\",\r\n          isDark ? \"translate-x-10\" : \"translate-x-1\"\r\n        )}\r\n      />\r\n      <Sun className=\"absolute left-2 h-4 w-4 text-amber-500 dark:text-amber-400\" />\r\n      <Moon className=\"absolute right-2 h-4 w-4 text-slate-600 dark:text-slate-300\" />\r\n    </button>\r\n  )\r\n} ","// Connection Status Indicator Component\r\nimport React from 'react'\r\nimport { Wifi, WifiOff, RefreshCw, AlertCircle } from 'lucide-react'\r\nimport { cn } from '@/lib/utils'\r\n\r\ninterface ConnectionStatusProps {\r\n  status: 'connected' | 'connecting' | 'disconnected' | 'error'\r\n  isPolling?: boolean\r\n  reconnectAttempts?: number\r\n  maxReconnectAttempts?: number\r\n  onReconnect?: () => void\r\n  className?: string\r\n}\r\n\r\nexport const ConnectionStatus: React.FC<ConnectionStatusProps> = ({\r\n  status,\r\n  isPolling = false,\r\n  reconnectAttempts = 0,\r\n  maxReconnectAttempts = 5,\r\n  onReconnect,\r\n  className\r\n}) => {\r\n  const getStatusConfig = () => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return {\r\n          icon: Wifi,\r\n          text: isPolling ? 'Polling Mode' : 'Connected',\r\n          color: 'text-green-500',\r\n          bgColor: 'bg-green-500/10',\r\n          borderColor: 'border-green-500/20'\r\n        }\r\n      case 'connecting':\r\n        return {\r\n          icon: RefreshCw,\r\n          text: `Connecting${reconnectAttempts > 0 ? ` (${reconnectAttempts}/${maxReconnectAttempts})` : ''}`,\r\n          color: 'text-yellow-500',\r\n          bgColor: 'bg-yellow-500/10',\r\n          borderColor: 'border-yellow-500/20'\r\n        }\r\n      case 'disconnected':\r\n        return {\r\n          icon: WifiOff,\r\n          text: 'Disconnected',\r\n          color: 'text-gray-500',\r\n          bgColor: 'bg-gray-500/10',\r\n          borderColor: 'border-gray-500/20'\r\n        }\r\n      case 'error':\r\n        return {\r\n          icon: AlertCircle,\r\n          text: 'Connection Error',\r\n          color: 'text-red-500',\r\n          bgColor: 'bg-red-500/10',\r\n          borderColor: 'border-red-500/20'\r\n        }\r\n    }\r\n  }\r\n\r\n  const config = getStatusConfig()\r\n  const Icon = config.icon\r\n\r\n  return (\r\n    <div className={cn(\r\n      \"flex items-center space-x-2 px-3 py-2 rounded-lg border\",\r\n      config.bgColor,\r\n      config.borderColor,\r\n      className\r\n    )}>\r\n      <Icon className={cn(\r\n        \"w-4 h-4\",\r\n        config.color,\r\n        status === 'connecting' && \"animate-spin\"\r\n      )} />\r\n      \r\n      <span className={cn(\r\n        \"text-sm font-medium\",\r\n        config.color\r\n      )}>\r\n        {config.text}\r\n      </span>\r\n\r\n      {status === 'disconnected' && onReconnect && (\r\n        <button\r\n          onClick={onReconnect}\r\n          className={cn(\r\n            \"ml-2 p-1 rounded-md\",\r\n            \"hover:bg-gray-500/20 transition-colors\"\r\n          )}\r\n          title=\"Reconnect\"\r\n        >\r\n          <RefreshCw className=\"w-3 h-3 text-gray-500\" />\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\n// Compact version for small spaces\r\nexport const CompactConnectionStatus: React.FC<ConnectionStatusProps> = ({\r\n  status,\r\n  isPolling = false,\r\n  className\r\n}) => {\r\n  const getStatusConfig = () => {\r\n    switch (status) {\r\n      case 'connected':\r\n        return {\r\n          icon: Wifi,\r\n          color: 'text-green-500',\r\n          title: isPolling ? 'Polling Mode' : 'Connected'\r\n        }\r\n      case 'connecting':\r\n        return {\r\n          icon: RefreshCw,\r\n          color: 'text-yellow-500',\r\n          title: 'Connecting'\r\n        }\r\n      case 'disconnected':\r\n        return {\r\n          icon: WifiOff,\r\n          color: 'text-gray-500',\r\n          title: 'Disconnected'\r\n        }\r\n      case 'error':\r\n        return {\r\n          icon: AlertCircle,\r\n          color: 'text-red-500',\r\n          title: 'Connection Error'\r\n        }\r\n    }\r\n  }\r\n\r\n  const config = getStatusConfig()\r\n  const Icon = config.icon\r\n\r\n  return (\r\n    <div\r\n      className={cn(\r\n        \"p-1 rounded-full\",\r\n        className\r\n      )}\r\n      title={config.title}\r\n    >\r\n      <Icon className={cn(\r\n        \"w-4 h-4\",\r\n        config.color,\r\n        status === 'connecting' && \"animate-spin\"\r\n      )} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ConnectionStatus ","// BMAD Dashboard v1 - Hoofddashboard voor BMAD agents\r\nimport React, { useState, useMemo, memo } from 'react'\r\nimport { Cpu, HardDrive, Users, TrendingUp } from 'lucide-react'\r\nimport { useBMADAgents } from '@/hooks/useBMADAgents'\r\nimport { useSystemMetrics } from '@/hooks/useSystemMetrics'\r\nimport { useWebSocket } from '@/hooks/useWebSocket'\r\n\r\nimport { AgentCard } from '@/components/ui/AgentCard'\r\nimport { ThemeToggle } from '@/components/ui/ThemeToggle'\r\nimport { CompactConnectionStatus } from '@/components/ui/ConnectionStatus'\r\nimport { cn } from '@/lib/utils'\r\n\r\n// Alert thresholds\r\nconst ALERT_THRESHOLDS = {\r\n  cpu: { warning: 70, critical: 90 },\r\n  memory: { warning: 80, critical: 95 }\r\n}\r\n\r\n// Get alert status\r\nconst getAlertStatus = (value: number, thresholds: { warning: number; critical: number }) => {\r\n  if (value >= thresholds.critical) return 'critical'\r\n  if (value >= thresholds.warning) return 'warning'\r\n  return 'normal'\r\n}\r\n\r\n// Get alert color\r\nconst getAlertColor = (status: string) => {\r\n  switch (status) {\r\n    case 'critical': return 'text-red-500 bg-red-500/10'\r\n    case 'warning': return 'text-yellow-500 bg-yellow-500/10'\r\n    default: return 'text-green-500 bg-green-500/10'\r\n  }\r\n}\r\n\r\n// Get alert icon\r\nconst getAlertIcon = (status: string) => {\r\n  switch (status) {\r\n    case 'critical': return '🔴'\r\n    case 'warning': return '🟡'\r\n    default: return '🟢'\r\n  }\r\n}\r\n\r\n// Progress Bar Component\r\nconst ProgressBar: React.FC<{ value: number; status: string }> = ({ value, status }) => (\r\n  <div className=\"w-full bg-muted rounded-full h-2 mb-2\">\r\n    <div\r\n      className={cn(\r\n        \"h-2 rounded-full transition-all duration-300\",\r\n        status === 'critical' ? \"bg-red-500\" :\r\n        status === 'warning' ? \"bg-yellow-500\" : \"bg-green-500\"\r\n      )}\r\n      style={{ width: `${Math.min(value, 100)}%` }}\r\n    />\r\n  </div>\r\n)\r\n\r\n// Metric Card Component\r\nconst MetricCard: React.FC<{\r\n  icon: React.ComponentType<{ className?: string }>\r\n  title: string\r\n  value: string | number\r\n  status: string\r\n  description: string\r\n  badge: string\r\n  badgeColor: string\r\n}> = ({ icon: Icon, title, value, status, description, badge, badgeColor }) => (\r\n  <div className={cn(\r\n    \"bg-card rounded-2xl p-6 shadow-lg border\",\r\n    \"border-border hover:shadow-xl transition-all duration-200\"\r\n  )}>\r\n    <div className=\"flex items-center justify-between mb-4\">\r\n      <div className={cn(\"p-3 rounded-lg\", getAlertColor(status))}>\r\n        <Icon className=\"w-8 h-8\" />\r\n      </div>\r\n      <div className=\"flex items-center space-x-2\">\r\n        <span className={cn(\r\n          \"px-3 py-1 rounded-full text-xs font-medium\",\r\n          badgeColor\r\n        )}>\r\n          {badge}\r\n        </span>\r\n        <span className=\"text-lg\">{getAlertIcon(status)}</span>\r\n      </div>\r\n    </div>\r\n    <h3 className=\"text-lg font-semibold text-card-foreground mb-2\">\r\n      {title}\r\n    </h3>\r\n    <div className=\"text-3xl font-bold text-card-foreground mb-2\">\r\n      {value}\r\n    </div>\r\n    <div className=\"text-sm text-muted-foreground mb-3\">\r\n      {description}\r\n    </div>\r\n    {typeof value === 'number' && <ProgressBar value={value} status={status} />}\r\n  </div>\r\n)\r\n\r\nconst BMADDashboardComponent: React.FC = memo(() => {\r\n  const { agents, loading: agentsLoading, error: agentsError, startAgent, stopAgent } = useBMADAgents()\r\n  const { metrics } = useSystemMetrics()\r\n  \r\n  // WebSocket connection for real-time updates\r\n  const {\r\n    connectionStatus,\r\n    isConnected\r\n  } = useWebSocket({\r\n    url: 'ws://localhost:5001/ws',\r\n    autoReconnect: true,\r\n    fallbackToPolling: true,\r\n    pollingInterval: 10000 // 10 seconden voor betere performance\r\n  })\r\n  \r\n  // Filter state\r\n  const [statusFilter, setStatusFilter] = useState<string>('all')\r\n  \r\n  // Filtered agents with safety check\r\n  const filteredAgents = useMemo(() => {\r\n    if (!Array.isArray(agents)) return []\r\n    if (statusFilter === 'all') return agents\r\n    return agents.filter(agent => agent && agent.status === statusFilter)\r\n  }, [agents, statusFilter])\r\n  \r\n  // Get unique statuses for filter options with safety check\r\n  const availableStatuses = useMemo(() => {\r\n    if (!Array.isArray(agents)) return ['all']\r\n    const statuses = [...new Set(agents.filter(agent => agent && agent.status).map(agent => agent.status))]\r\n    return ['all', ...statuses]\r\n  }, [agents])\r\n\r\n  const handleStartAgent = async (agentId: string) => {\r\n    if (!agentId) {\r\n      console.error('Invalid agent ID provided')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      const result = await startAgent(agentId)\r\n      if (result.success) {\r\n        // Agent started successfully\r\n      } else {\r\n        console.error('Failed to start agent:', result.message)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error starting agent:', error)\r\n    }\r\n  }\r\n\r\n  const handleStopAgent = async (agentId: string) => {\r\n    if (!agentId) {\r\n      console.error('Invalid agent ID provided')\r\n      return\r\n    }\r\n    \r\n    try {\r\n      const result = await stopAgent(agentId)\r\n      if (result.success) {\r\n        // Agent stopped successfully\r\n      } else {\r\n        console.error('Failed to stop agent:', result.message)\r\n      }\r\n    } catch (error) {\r\n      console.error('Error stopping agent:', error)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <div className={cn(\r\n      \"min-h-screen transition-colors duration-200\",\r\n      \"bg-background text-foreground\"\r\n    )}>\r\n      {/* Main Content */}\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        \r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className={cn(\r\n            \"bg-card rounded-2xl p-8 shadow-lg border\",\r\n            \"border-border h-32\" // Vaste hoogte van 128px voor consistentie\r\n          )}>\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-4\">\r\n                <div>\r\n                  <h1 className=\"text-2xl font-bold text-card-foreground\">\r\n                    BMAD Dashboard v1.0\r\n                  </h1>\r\n                  <p className=\"text-sm text-muted-foreground\">\r\n                    Live Monitoring\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center space-x-4\">\r\n                {/* Connection Status */}\r\n                <CompactConnectionStatus\r\n                  status={connectionStatus}\r\n                  isPolling={!isConnected && connectionStatus === 'connected'}\r\n                  className=\"p-2 rounded-lg border border-border\"\r\n                />\r\n                \r\n                <ThemeToggle />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n                {/* System Health Block */}\r\n        <div className=\"mb-8\">\r\n          <div className={cn(\r\n            \"bg-card rounded-2xl p-8 shadow-lg border\",\r\n            \"border-border\"\r\n          )}>\r\n            <div className=\"flex-shrink-0 mb-6\">\r\n              <h2 className=\"text-xl font-semibold text-card-foreground\">\r\n                BMAD Agent Systeem Gezondheid\r\n              </h2>\r\n            </div>\r\n            {metrics && metrics.system_health ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                \r\n                {/* Agent CPU Usage Card */}\r\n                <MetricCard\r\n                  icon={Cpu}\r\n                  title=\"Agent CPU Gebruik\"\r\n                  value={`${parseInt(metrics.system_health.cpu_usage) || 0}%`}\r\n                  status={getAlertStatus(parseInt(metrics.system_health.cpu_usage) || 0, ALERT_THRESHOLDS.cpu)}\r\n                  description=\"Gemiddeld CPU gebruik van alle agents\"\r\n                  badge=\"Agent CPU\"\r\n                  badgeColor=\"bg-blue-500 text-white\"\r\n                />\r\n\r\n                {/* Agent Memory Usage Card */}\r\n                <MetricCard\r\n                  icon={HardDrive}\r\n                  title=\"Agent Geheugen\"\r\n                  value={`${parseInt(metrics.system_health.memory_usage) || 0}%`}\r\n                  status={getAlertStatus(parseInt(metrics.system_health.memory_usage) || 0, ALERT_THRESHOLDS.memory)}\r\n                  description=\"Gemiddeld geheugen gebruik van alle agents\"\r\n                  badge=\"Agent RAM\"\r\n                  badgeColor=\"bg-green-500 text-white\"\r\n                />\r\n\r\n                {/* Agent Success Rate Card */}\r\n                <MetricCard\r\n                  icon={TrendingUp}\r\n                  title=\"Agent Success Rate\"\r\n                  value={`${metrics.system_health.agent_success_rate || 0}%`}\r\n                  status={getAlertStatus(metrics.system_health.agent_success_rate || 0, { warning: 70, critical: 50 })}\r\n                  description=\"Percentage succesvolle agent taken\"\r\n                  badge=\"Success\"\r\n                  badgeColor=\"bg-purple-500 text-white\"\r\n                />\r\n\r\n              </div>\r\n            ) : (\r\n              <div className=\"text-center py-8\">\r\n                <p className=\"text-muted-foreground\">Loading system health data...</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* BMAD Agents Block */}\r\n        <div className=\"mb-8\">\r\n          <div className={cn(\r\n            \"bg-card rounded-2xl p-8 shadow-lg border\",\r\n            \"border-border\" // Verwijder vaste hoogte en flexbox\r\n          )}>\r\n            {/* Header met titel en filter buttons */}\r\n            <div className=\"flex-shrink-0 mb-6\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-xl font-semibold text-card-foreground\">\r\n                  BMAD Agents\r\n                </h2>\r\n                {agentsError && (\r\n                  <div className=\"text-sm text-destructive\">\r\n                    Error loading agents: {agentsError}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              {/* Filter Buttons */}\r\n              <div className=\"flex flex-wrap gap-2\">\r\n                {availableStatuses.map(status => (\r\n                  <button\r\n                    key={status}\r\n                    onClick={() => setStatusFilter(status)}\r\n                    className={cn(\r\n                      \"px-3 py-1 rounded-lg text-sm font-medium transition-all duration-200\",\r\n                      statusFilter === status\r\n                        ? \"bg-primary text-primary-foreground shadow-md\"\r\n                        : \"bg-secondary text-secondary-foreground hover:bg-secondary/80\"\r\n                    )}\r\n                  >\r\n                    {status === 'all' ? 'All Status' : status.charAt(0).toUpperCase() + status.slice(1)}\r\n                  </button>\r\n                ))}\r\n                \r\n                {/* Remove duplicate Error Filter Button - error status is handled in the loop above */}\r\n              </div>\r\n            </div>\r\n\r\n            {agentsLoading ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-h-96 overflow-y-auto\">\r\n                {[1, 2, 3, 4, 5, 6].map((i) => (\r\n                  <div key={i} className={cn(\r\n                    \"bg-muted rounded-xl p-6 animate-pulse\"\r\n                  )}>\r\n                    <div className=\"h-4 bg-muted-foreground/20 rounded mb-4\"></div>\r\n                    <div className=\"h-3 bg-muted-foreground/20 rounded mb-2\"></div>\r\n                    <div className=\"h-3 bg-muted-foreground/20 rounded\"></div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : filteredAgents.length > 0 ? (\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-h-96 overflow-y-auto pr-2\">\r\n                {filteredAgents.map((agent) => (\r\n                  <AgentCard\r\n                    key={agent.id}\r\n                    agent={agent}\r\n                    onStart={handleStartAgent}\r\n                    onStop={handleStopAgent}\r\n                  />\r\n                ))}\r\n              </div>\r\n            ) : (\r\n              <div className=\"flex items-center justify-center py-8\">\r\n                <div className=\"text-center\">\r\n                  <Users className=\"w-16 h-16 text-muted-foreground mx-auto mb-4\" />\r\n                  <h3 className=\"text-xl font-medium text-card-foreground mb-2\">\r\n                    No BMAD Agents Found\r\n                  </h3>\r\n                  <p className=\"text-muted-foreground\">\r\n                    No agents are currently running. Start some agents to see them here.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport const BMADDashboard = BMADDashboardComponent\r\nexport default BMADDashboardComponent "],"names":["AlertCircle","createLucideIcon","Moon","Sun","WifiOff","useWebSocket","options","url","autoReconnect","reconnectInterval","maxReconnectAttempts","fallbackToPolling","pollingInterval","isConnected","setIsConnected","useState","isConnecting","setIsConnecting","lastMessage","setLastMessage","error","setError","connectionStatus","setConnectionStatus","reconnectAttempts","setReconnectAttempts","usePolling","setUsePolling","wsRef","useRef","reconnectTimeoutRef","pollingIntervalRef","isMountedRef","cleanup","useCallback","startPolling","poll","controller","timeoutId","response","data","err","stopPolling","connect","_a","ws","event","message","prev","disconnect","sendMessage","reconnect","useEffect","ThemeToggle","isDark","toggle","useTheme","jsxs","cn","jsx","CompactConnectionStatus","status","isPolling","className","config","Wifi","RefreshCw","Icon","ALERT_THRESHOLDS","getAlertStatus","value","thresholds","getAlertColor","getAlertIcon","ProgressBar","MetricCard","title","description","badge","badgeColor","BMADDashboardComponent","memo","agents","agentsLoading","agentsError","startAgent","stopAgent","useBMADAgents","metrics","useSystemMetrics","statusFilter","setStatusFilter","filteredAgents","useMemo","agent","availableStatuses","handleStartAgent","agentId","result","handleStopAgent","Cpu","HardDrive","TrendingUp","i","AgentCard","Users","BMADDashboard"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}