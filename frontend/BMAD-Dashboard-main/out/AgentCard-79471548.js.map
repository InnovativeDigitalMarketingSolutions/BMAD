{"version":3,"file":"AgentCard-79471548.js","sources":["../../src/utils/stabilityTest.ts","../../src/hooks/useBMADAgents.ts","../../src/components/ui/AgentCard.tsx"],"sourcesContent":["// Stability Test Utility - Check for potential issues\r\nexport const stabilityTest = {\r\n  // Test API responses\r\n  validateApiResponse: (data: any, expectedKeys: string[]): boolean => {\r\n    if (!data || typeof data !== 'object') {\r\n      console.warn('Invalid API response: data is not an object')\r\n      return false\r\n    }\r\n\r\n    for (const key of expectedKeys) {\r\n      if (!(key in data)) {\r\n        console.warn(`Invalid API response: missing key '${key}'`)\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  // Test array safety\r\n  validateArray: (arr: any, itemValidator?: (item: any) => boolean): boolean => {\r\n    if (!Array.isArray(arr)) {\r\n      console.warn('Expected array but got:', typeof arr)\r\n      return false\r\n    }\r\n\r\n    if (itemValidator) {\r\n      for (let i = 0; i < arr.length; i++) {\r\n        if (!itemValidator(arr[i])) {\r\n          console.warn(`Invalid array item at index ${i}:`, arr[i])\r\n          return false\r\n        }\r\n      }\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  // Test object safety\r\n  validateObject: (obj: any, requiredKeys: string[] = []): boolean => {\r\n    if (!obj || typeof obj !== 'object') {\r\n      console.warn('Invalid object:', obj)\r\n      return false\r\n    }\r\n\r\n    for (const key of requiredKeys) {\r\n      if (!(key in obj)) {\r\n        console.warn(`Missing required object key: ${key}`)\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  },\r\n\r\n  // Test string safety\r\n  validateString: (str: any, minLength: number = 0): boolean => {\r\n    if (typeof str !== 'string') {\r\n      console.warn('Expected string but got:', typeof str)\r\n      return false\r\n    }\r\n\r\n    if (str.length < minLength) {\r\n      console.warn(`String too short: ${str.length} < ${minLength}`)\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n} ","// BMAD Agents Hook - Live API data van poort 5001\r\nimport { useState, useEffect, useCallback } from 'react'\r\nimport { BMADAgent } from '@/types/bmad'\r\nimport { stabilityTest } from '@/utils/stabilityTest'\r\n\r\nconst API_BASE = 'http://localhost:5000/api'\r\n\r\ninterface AgentResponse {\r\n  agents: BMADAgent[]\r\n  total?: number\r\n  active?: number\r\n  timestamp?: string\r\n}\r\n\r\ninterface AgentActionResponse {\r\n  success: boolean\r\n  message: string\r\n}\r\n\r\nexport const useBMADAgents = () => {\r\n  const [agents, setAgents] = useState<BMADAgent[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [error, setError] = useState<string | null>(null)\r\n  const [retryCount, setRetryCount] = useState(0)\r\n\r\n  // Ensure agents is always an array\r\n  const safeAgents = Array.isArray(agents) ? agents : []\r\n\r\n  const fetchAgents = useCallback(async () => {\r\n    try {\r\n      setLoading(true)\r\n      setError(null)\r\n      \r\n      const controller = new AbortController()\r\n      const timeoutId = setTimeout(() => controller.abort(), 10000) // Increased timeout to 10 seconds\r\n      \r\n      const response = await fetch(`${API_BASE}/agents`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        signal: controller.signal\r\n      })\r\n      \r\n      clearTimeout(timeoutId)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`)\r\n      }\r\n      \r\n      const data: AgentResponse = await response.json()\r\n      \r\n      // Stability validation\r\n      if (!stabilityTest.validateApiResponse(data, ['agents'])) {\r\n        console.warn('Invalid agents API response structure')\r\n        setAgents([])\r\n        return\r\n      }\r\n      \r\n      // Validate agents array\r\n      if (stabilityTest.validateArray(data.agents, (agent) => \r\n        stabilityTest.validateObject(agent, ['id', 'name', 'status'])\r\n      )) {\r\n        setAgents(data.agents)\r\n        setRetryCount(0) // Reset retry count on success\r\n      } else {\r\n        console.warn('Invalid agents array structure')\r\n        setAgents([])\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to fetch agents'\r\n      setError(errorMessage)\r\n      console.error('Error fetching BMAD agents:', err)\r\n      \r\n      // Increment retry count\r\n      setRetryCount(prev => prev + 1)\r\n      \r\n      // Don't crash the app, just set empty array\r\n      setAgents([])\r\n    } finally {\r\n      setLoading(false)\r\n    }\r\n  }, [])\r\n\r\n  const startAgent = useCallback(async (agentId: string): Promise<AgentActionResponse> => {\r\n    if (!stabilityTest.validateString(agentId, 1)) {\r\n      return { success: false, message: 'Invalid agent ID' }\r\n    }\r\n\r\n    try {\r\n      const controller = new AbortController()\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000)\r\n      \r\n      const response = await fetch(`${API_BASE}/agents/${agentId}/start`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json' \r\n        },\r\n        signal: controller.signal\r\n      })\r\n      \r\n      clearTimeout(timeoutId)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to start agent: ${response.status}`)\r\n      }\r\n      \r\n      // Refresh agents after action\r\n      await fetchAgents()\r\n      return { success: true, message: 'Agent started successfully' }\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : 'Failed to start agent'\r\n      console.error('Error starting agent:', err)\r\n      return { success: false, message }\r\n    }\r\n  }, [fetchAgents])\r\n\r\n  const stopAgent = useCallback(async (agentId: string): Promise<AgentActionResponse> => {\r\n    if (!stabilityTest.validateString(agentId, 1)) {\r\n      return { success: false, message: 'Invalid agent ID' }\r\n    }\r\n\r\n    try {\r\n      const controller = new AbortController()\r\n      const timeoutId = setTimeout(() => controller.abort(), 5000)\r\n      \r\n      const response = await fetch(`${API_BASE}/agents/${agentId}/stop`, {\r\n        method: 'POST',\r\n        headers: { \r\n          'Content-Type': 'application/json' \r\n        },\r\n        signal: controller.signal\r\n      })\r\n      \r\n      clearTimeout(timeoutId)\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to stop agent: ${response.status}`)\r\n      }\r\n      \r\n      // Refresh agents after action\r\n      await fetchAgents()\r\n      return { success: true, message: 'Agent stopped successfully' }\r\n    } catch (err) {\r\n      const message = err instanceof Error ? err.message : 'Failed to stop agent'\r\n      console.error('Error stopping agent:', err)\r\n      return { success: false, message }\r\n    }\r\n  }, [fetchAgents])\r\n\r\n  // Auto-refresh elke 15 seconden voor betere real-time updates\r\n  useEffect(() => {\r\n    fetchAgents()\r\n    \r\n    const interval = setInterval(fetchAgents, 15000)\r\n    return () => clearInterval(interval)\r\n  }, [fetchAgents])\r\n\r\n  return {\r\n    agents: safeAgents,\r\n    loading,\r\n    error,\r\n    retryCount,\r\n    fetchAgents,\r\n    startAgent,\r\n    stopAgent\r\n  }\r\n} \r\n","// Agent Card Component - Apple-inspired design voor BMAD agents (Shadcn/ui compatible)\r\nimport React from 'react'\r\nimport { Play, Square, Activity, Clock } from 'lucide-react'\r\nimport { BMADAgent } from '@/types/bmad'\r\nimport { cn } from '@/lib/utils'\r\n\r\ninterface AgentCardProps {\r\n  agent: BMADAgent\r\n  onStart: (agentId: string) => void\r\n  onStop: (agentId: string) => void\r\n  onClick?: (agent: BMADAgent) => void\r\n}\r\n\r\nexport const AgentCard: React.FC<AgentCardProps> = ({ agent, onStart, onStop, onClick }) => {\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'bg-green-500'\r\n      case 'stopped':\r\n        return 'bg-gray-500'\r\n      case 'error':\r\n        return 'bg-red-500'\r\n      default:\r\n        return 'bg-yellow-500'\r\n    }\r\n  }\r\n\r\n  const getStatusText = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'Actief'\r\n      case 'stopped':\r\n        return 'Gestopt'\r\n      case 'error':\r\n        return 'Kritiek'\r\n      case 'idle':\r\n        return 'Inactief'\r\n      default:\r\n        return 'Inactief' // Default to idle instead of unknown\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div \r\n      className={cn(\r\n        \"bg-card rounded-2xl p-6 shadow-lg border border-border\",\r\n        \"hover:shadow-xl transition-all duration-200\",\r\n        \"relative agent-card\",\r\n        onClick && \"cursor-pointer\"\r\n      )}\r\n      onClick={() => onClick?.(agent)}\r\n    >\r\n      {/* Status Indicator */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <div className={cn(\r\n            \"w-3 h-3 rounded-full\",\r\n            getStatusColor(agent.status)\r\n          )} />\r\n          <span className={cn(\r\n            \"text-sm font-medium\",\r\n            agent.status === 'active' ? 'text-green-600' :\r\n            agent.status === 'stopped' ? 'text-gray-600' :\r\n            agent.status === 'error' ? 'text-red-600' : 'text-yellow-600'\r\n          )}>\r\n            {getStatusText(agent.status)}\r\n          </span>\r\n        </div>\r\n        <div className=\"flex items-center space-x-1\">\r\n          <Activity className=\"w-4 h-4 text-muted-foreground\" />\r\n          <span className=\"text-sm text-muted-foreground\">{agent.performance}%</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Agent Info */}\r\n      <div className=\"mb-4\">\r\n        <h3 className=\"text-lg font-semibold text-card-foreground mb-1\">\r\n          {agent.name}\r\n        </h3>\r\n        <p className=\"text-sm text-muted-foreground mb-2\">\r\n          {agent.type}\r\n        </p>\r\n        <div className=\"flex items-center space-x-2 text-sm text-muted-foreground\">\r\n          <Clock className=\"w-3 h-3\" />\r\n          <span>{agent.last_activity}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Performance Bar */}\r\n      <div className=\"mb-4\">\r\n        <div className=\"flex items-center justify-between text-sm mb-1\">\r\n          <span className=\"text-muted-foreground\">Prestatie</span>\r\n          <span className=\"text-card-foreground font-medium\">{agent.performance}%</span>\r\n        </div>\r\n        <div className=\"w-full bg-muted rounded-full h-2 relative overflow-hidden\">\r\n          <div\r\n            className={cn(\r\n              \"h-2 rounded-full transition-all duration-300\",\r\n              // All values under 100% stay green, only over 100% becomes red\r\n              agent.performance > 100 ? \"bg-red-500\" : \"bg-green-500\"\r\n            )}\r\n            style={{ \r\n              width: `${Math.min(agent.performance, 100)}%`,\r\n              // Add a stronger glow effect for critical values over 100%\r\n              ...(agent.performance > 100 && {\r\n                boxShadow: '0 0 12px rgba(239, 68, 68, 0.8)',\r\n                filter: 'brightness(1.2)'\r\n              })\r\n            }}\r\n          />\r\n          {/* Show critical overflow indicator for values over 100% */}\r\n          {agent.performance > 100 && (\r\n            <div className=\"absolute right-0 top-0 h-2 w-1 bg-red-400 rounded-r-full\" />\r\n          )}\r\n        </div>\r\n        {/* Show critical warning for values over 100% */}\r\n        {agent.performance > 100 && (\r\n          <div className=\"text-xs text-red-600 mt-1 flex items-center\">\r\n            <Activity className=\"w-3 h-3 mr-1\" />\r\n            Kritiek: {agent.performance}% performance\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Control Buttons */}\r\n      <div className=\"flex items-center space-x-2\">\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            onStart(agent.id)\r\n          }}\r\n          disabled={agent.status === 'active'}\r\n          className={cn(\r\n            \"flex items-center space-x-1 px-3 py-2 rounded-lg text-sm\",\r\n            agent.status === 'active'\r\n              ? \"bg-green-500 text-white cursor-not-allowed\"\r\n              : \"bg-primary text-primary-foreground hover:bg-primary/90\"\r\n          )}\r\n        >\r\n          <Play className=\"w-3 h-3\" />\r\n          <span>Start</span>\r\n        </button>\r\n        <button\r\n          onClick={(e) => {\r\n            e.stopPropagation()\r\n            onStop(agent.id)\r\n          }}\r\n          disabled={agent.status === 'stopped'}\r\n          className={cn(\r\n            \"flex items-center space-x-1 px-3 py-2 rounded-lg text-sm\",\r\n            agent.status === 'stopped'\r\n              ? \"bg-gray-500 text-white cursor-not-allowed\"\r\n              : \"bg-destructive text-destructive-foreground hover:bg-destructive/90\"\r\n          )}\r\n        >\r\n          <Square className=\"w-3 h-3\" />\r\n          <span>Stop</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n} "],"names":["stabilityTest","data","expectedKeys","key","arr","itemValidator","i","obj","requiredKeys","str","minLength","API_BASE","useBMADAgents","agents","setAgents","useState","loading","setLoading","error","setError","retryCount","setRetryCount","safeAgents","fetchAgents","useCallback","controller","timeoutId","response","agent","err","errorMessage","prev","startAgent","agentId","message","stopAgent","useEffect","interval","AgentCard","onStart","onStop","onClick","getStatusColor","status","getStatusText","jsxs","cn","jsx","Activity","Clock","e","Play","Square"],"mappings":"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"}